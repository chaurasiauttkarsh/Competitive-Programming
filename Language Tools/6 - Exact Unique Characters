Given a string, you need to remove all the duplicates. That means, the output string should contain each character only once. The respective order of characters should remain same.
Input format :
String S
Output format :
Output String
Constraints :
0 <= Length of S <= 10^8
Sample Input 1 :
ababacd
Sample Output 1 :
abcd
Sample Input 2 :
abcde
Sample Output 2 :
abcde

Solution:
#include <unordered_set>

char* uniqueChar(char *str)
{
    unordered_set<char> s;
    int edit_index = 0;
    for(int i = 0; str[i] != '\0'; i++)
    {
        if(s.find(str[i]) == s.end())
        {
            s.insert(str[i]);
            str[edit_index++] = str[i];
        } 
    }
    str[edit_index] = '\0';
    return str;
}
