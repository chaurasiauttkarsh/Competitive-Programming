Given a n*m matrix which contains only 0s and 1s, find out the size of maximum square sub-matrix with all 0s. You need to return the size of square with all 0s.
Input format :
Line 1 : n and m (space separated positive integers)
Next n lines : m elements of each row (separated by space).
Output Format:
Line 1 : Size of maximum square sub-matrix
Sample Input :
3 3
1 1 0
1 1 1
1 1 1
Sample Output :
1

Solution:
using namespace std;
int findMaxSquareWithAllZeros(int** arr, int row, int col)
{
    int ans[row + 1][col + 1];
    for(int i = 0; i <= row; i++)
        for(int j = 0; j <= col; j++)
            ans[i][j] = 0;
    
    int max = 0;
    
    for(int i = 0; i < row; i++)
    {
        for(int j = 0; j < col; j++)
        {
            if(arr[i][j] == 1)
                ans[i + 1][j + 1] = 0;
            else
            {
                ans[i + 1][j + 1] = min(ans[i][j], min(ans[i][j + 1], ans[i + 1][j])) + 1;
            }
            if(ans[i + 1][j + 1] > max)
                max = ans[i + 1][j + 1];
        }
    }
    return max;
}
